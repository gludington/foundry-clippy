name: Release Module

on:
  push:
    tags:
      - '*'  # Trigger on version tags like v1.0.0, v1.1.0, etc.

permissions:
  contents: write  # Allows GitHub Actions to upload release assets
  id-token: write  # Allows interaction with GitHub authentication

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Extract version from tag
      - name: Extract version
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV  # Set VERSION as an environment variable

      # Step 3: Create dist directory and zip the project (excluding .git files)
      - name: Create dist directory and zip the project
        run: |
          mkdir -p dist
          zip -r dist/foundry-clippy-${VERSION}.zip . -x ".github" -x "dist" # Exclude .git files

      # Step 4: Update module.json with version and latest URLs
      - name: Update module.json with version and latest URLs
        run: |
          # Create versioned manifest URL
          VERSIONED_MANIFEST="https://github.com/${{ github.repository }}/releases/download/${VERSION}/module.json"
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/foundry-clippy-${VERSION}.zip"
          
          # Update the existing module.json with version-specific URLs
          jq --arg manifest_url "$VERSIONED_MANIFEST" \
             --arg download_url "$DOWNLOAD_URL" \
             '. + { "manifest": $manifest_url, "download": $download_url }' module.json > dist/module.json

          # Create latest.json manifest with the latest release information
          LATEST_MANIFEST="https://github.com/${{ github.repository }}/releases/download/latest/module.json"
          LATEST_DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/latest/foundry-clippy-latest.zip"
          
          # Full content of the latest.json file
          jq --arg manifest_url "$LATEST_MANIFEST" \
             --arg download_url "$LATEST_DOWNLOAD_URL" \
             '. + { "manifest": $manifest_url, "download": $download_url }' module.json > dist/latest.json

      # Step 5: Upload release assets (zip file and updated module.json files)
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/foundry-clippy-${{env.VERSION}}.zip
            dist/module.json
            dist/latest.json
